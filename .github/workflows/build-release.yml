name: Release
on:
  release:
    types: [published]
jobs:
  buildAppxBundle:
    name: Sideload
    runs-on: windows-2025
    permissions:
      packages: read
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Prepare Env
      uses: microsoft/setup-msbuild@v2
    - name: Auth nuget registry
      run: dotnet nuget update source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text guerra24
    - name: Prepare nuget cache
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: nuget-uwp-${{ hashFiles('LRReader.Shared/packages.lock.json', 'LRReader.UWP/packages.lock.json') }}
        restore-keys: |
          nuget-uwp-
    - name: Build
      env:
        CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
        CERT_GPG: ${{ secrets.CERT_GPG }}
        CERT_BASE64: ${{ secrets.CERT_BASE64 }}
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      run: |
        [IO.File]::WriteAllBytes("./Cert.pfx.gpg", [Convert]::FromBase64String("${env:CERT_BASE64}"))
        & "C:\Program Files\Git\usr\bin\gpg.exe" --quiet --batch --yes --decrypt --passphrase="${env:CERT_GPG}" --output Cert.pfx Cert.pfx.gpg
        $Thumbprint = (Import-PfxCertificate .\Cert.pfx -Password (ConvertTo-SecureString "${env:CERT_PASSWORD}" -AsPlainText -Force) -CertStoreLocation Cert:\CurrentUser\My).Thumbprint
        Remove-Item -Path "./Cert.pfx.gpg","./Cert.pfx"
        Move-Item -Path "./Util/Package.appxmanifest" -Destination "./LRReader.UWP/Package.appxmanifest" -Force
        [xml]$xmlDoc = Get-Content "./LRReader.UWP/Package.appxmanifest"
        Set-Content -NoNewline -Path "./version.txt" -Value $xmlDoc.Package.Identity.Version
        Invoke-Expression "./Util/ConfigureAppCenter.ps1"
        MSBuild LRReader.UWP.Servicing.CertInstaller\LRReader.UWP.Servicing.CertInstaller.csproj -nologo -r -v:minimal /p:Configuration=Release /p:Platform=AnyCPU
        Move-Item -Path "./LRReader.UWP.Servicing.CertInstaller/bin/Release/net472/CertInstaller.exe" -Destination "./LRReader.UWP/zServicing/CertInstaller.exe" -Force
        MSBuild LRReader.UWP\LRReader.UWP.csproj -nologo -r -v:minimal /p:RestoreLockedMode=true /p:Sideload=true /p:Configuration=Release /p:UapAppxPackageBuildMode="SideloadOnly" /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="" /p:PackageCertificateKeyFile="..\Cert.pfx" /p:PackageCertificatePassword="${env:CERT_PASSWORD}" /p:GenerateAppInstallerFile=True /p:AppInstallerUri="https://s3.guerra24.net/projects/lrr/$($xmlDoc.Package.Identity.Version)"
        Invoke-Expression "./Util/CleanInstaller.ps1"
    - name: Prepare for upload
      run: ./Util/PrepareForUpload.ps1
    - name: Setup sentry-cli
      uses: matbour/setup-sentry-cli@v2
      with:
        version: 2.39.1
        token: ${{ secrets.SENTRY_TOKEN }}
        organization: ${{ secrets.SENTRY_ORG }}
        project: ${{ secrets.SENTRY_PROJECT }}
    - name: Upload Symbols
      run: |
        Set-Location "./LRReader.UWP/AppPackages/LRReader.UWP"
        Get-ChildItem *.appxsym -File | Rename-Item -NewName { [IO.Path]::ChangeExtension($_.name, "zip") }
        foreach ($file in $(Get-ChildItem *.zip -File)) { sentry-cli debug-files upload --wait $file }
        Remove-Item $(Get-ChildItem *.zip -File)
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: LRReader
        path: LRReader.UWP/AppPackages
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Upload to S3
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      run: aws s3 sync LRReader.UWP/AppPackages s3://${env:AWS_S3_BUCKET}/projects/lrr/$(Get-Content ".\version.txt") --no-progress --acl public-read --follow-symlinks
    - name: Upload to Release
      uses: Guerra24/upload-to-release@v1
      with:
        name: LRReader.appinstaller
        path: LRReader.UWP/AppPackages/LRReader.UWP.appinstaller
        repo-token: ${{ secrets.GITHUB_TOKEN }}
  buildInstaller:
    name: Installer
    runs-on: windows-2025
    permissions:
      packages: read
      contents: write
    strategy:
      matrix:
        arch: [x64, ARM64]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Prepare Env
      uses: microsoft/setup-msbuild@v2
    - name: Auth nuget registry
      run: dotnet nuget update source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text guerra24
    - name: Prepare nuget cache
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: nuget-installer-${{ hashFiles('LRReader.UWP.Installer/packages.lock.json') }}
        restore-keys: |
          nuget-installer-
    - name: Build
      run: |
        [xml]$xmlDoc = Get-Content "./Util/Package.appxmanifest"
        $env:APP_INSTALLER_URL="https://s3.guerra24.net/projects/lrr/$($xmlDoc.Package.Identity.Version)/LRReader.UWP.appinstaller"
        $env:APP_VERSION="$($xmlDoc.Package.Identity.Version)"
        Invoke-Expression "./Util/ConfigureInstaller.ps1"
        MSBuild LRReader.UWP.Installer\LRReader.UWP.Installer.csproj -nologo -r -v:minimal /p:RestoreLockedMode=true /p:Configuration=Release /p:Platform=${{ matrix.arch }}
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Installer-${{ matrix.arch }}
        path: LRReader.UWP.Installer/bin/${{ matrix.arch }}/Release/net472/LRReader.UWP.Installer.exe
    - name: Upload to Release
      uses: Guerra24/upload-to-release@v1
      with:
        name: LRReader.${{ matrix.arch }}.exe
        path: LRReader.UWP.Installer/bin/${{ matrix.arch }}/Release/net472/LRReader.UWP.Installer.exe
        repo-token: ${{ secrets.GITHUB_TOKEN }}
  buildStoreBundle:
    name: Store
    runs-on: windows-2025
    permissions:
      packages: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Prepare Env
      uses: microsoft/setup-msbuild@v2
    - name: Auth nuget registry
      run: dotnet nuget update source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text guerra24
    - name: Prepare nuget cache
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: nuget-uwp-${{ hashFiles('LRReader.Shared/packages.lock.json', 'LRReader.UWP/packages.lock.json') }}
        restore-keys: |
          nuget-uwp-
    - name: Build
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      run: |
        Invoke-Expression "./Util/ConfigureAppCenter.ps1"
        MSBuild LRReader.UWP\LRReader.UWP.csproj -nologo -r -v:minimal /p:RestoreLockedMode=true /p:Configuration=Release /p:UapAppxPackageBuildMode="StoreOnly" /p:AppxPackageSigningEnabled=false /p:GenerateAppxPackageOnBuild=true
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: LRReader_Store
        path: LRReader.UWP/AppPackages/*.msixupload
