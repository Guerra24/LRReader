<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiValidation.Archives.Text" xml:space="preserve">
    <value>Архивы</value>
  </data>
  <data name="ApiValidation.Categories.Text" xml:space="preserve">
    <value>Категории</value>
  </data>
  <data name="ApiValidation.Database.Text" xml:space="preserve">
    <value>База данных</value>
  </data>
  <data name="ApiValidation.Dialog.PrimaryButtonText" xml:space="preserve">
    <value>Принять и продолжить</value>
  </data>
  <data name="ApiValidation.Dialog.SecondaryButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ApiValidation.Dialog.Title" xml:space="preserve">
    <value>Валидация API</value>
  </data>
  <data name="ApiValidation.PassTests.Text" xml:space="preserve">
    <value>Выбранный профиль не прошел один или несколько следующих тестов:</value>
  </data>
  <data name="ApiValidation.Terms.Text" xml:space="preserve">
    <value>Продолжив, вы даёте согласие, что поддержка предоставляться не будет, а отчёты об ошибках будут отключены на время сессии.
Любые сбои, ошибки, ошибочные или отсутствующие данные происходят по вине веб-сайта, а НЕ приложения.</value>
  </data>
  <data name="CategoryArchive.Dialog.PrimaryButtonText" xml:space="preserve">
    <value>Готово</value>
  </data>
  <data name="CategoryArchive.Search.PlaceholderText" xml:space="preserve">
    <value>Поиск...</value>
  </data>
  <data name="ConfigureCategory.CloseButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ConfigureCategory.Content" xml:space="preserve">
    <value>Статическая категория использует фиксированный список архивов{0}Динамическая категория использует поисковые строки для динамического заполнения списка</value>
  </data>
  <data name="ConfigureCategory.PrimaryButtonText" xml:space="preserve">
    <value>Статическая</value>
  </data>
  <data name="ConfigureCategory.SecondaryButtonText" xml:space="preserve">
    <value>Динамическая</value>
  </data>
  <data name="ConfigureCategory.Title" xml:space="preserve">
    <value>Выберите режим категории</value>
  </data>
  <data name="CreateCategory.CategoryName.PlaceholderText" xml:space="preserve">
    <value>Название категории</value>
  </data>
  <data name="CreateCategory.Dialog.CloseButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="CreateCategory.Dialog.PrimaryButtonText" xml:space="preserve">
    <value>Добавить</value>
  </data>
  <data name="CreateCategory.Dialog.Title" xml:space="preserve">
    <value>Категория</value>
  </data>
  <data name="CreateCategory.ErrorName" xml:space="preserve">
    <value>Пустое название категории</value>
  </data>
  <data name="CreateCategory.Pinned.Header" xml:space="preserve">
    <value>Закрепленна</value>
  </data>
  <data name="CreateCategory.SearchQuery.Header" xml:space="preserve">
    <value>Оставьте пустым для статической категории</value>
  </data>
  <data name="CreateCategory.SearchQuery.PlaceholderText" xml:space="preserve">
    <value>Поисковый запрос</value>
  </data>
  <data name="OpenLink.CloseButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="OpenLink.PrimaryButtonText" xml:space="preserve">
    <value>Открыть в браузере</value>
  </data>
  <data name="OpenLink.SecondaryButtonText" xml:space="preserve">
    <value>Копировать в буфер обмена</value>
  </data>
  <data name="OpenLink.Title" xml:space="preserve">
    <value>Приложение пытается открыть...</value>
  </data>
  <data name="ProgressConflict.Dialog.PrimaryButtonText" xml:space="preserve">
    <value>Продолжить</value>
  </data>
  <data name="ProgressConflict.Dialog.Title" xml:space="preserve">
    <value>Прогресс архива</value>
  </data>
  <data name="ProgressConflict.Local" xml:space="preserve">
    <value>Использовать локальный ({0}/{1})</value>
  </data>
  <data name="ProgressConflict.Remote" xml:space="preserve">
    <value>Использовать удалённый ({0}/{1})</value>
  </data>
  <data name="RemoveArchive.CloseButtonText" xml:space="preserve">
    <value>Нет</value>
  </data>
  <data name="RemoveArchive.Content" xml:space="preserve">
    <value>Точно удалить?</value>
  </data>
  <data name="RemoveArchive.PrimaryButtonText" xml:space="preserve">
    <value>Да</value>
  </data>
  <data name="RemoveArchive.Title" xml:space="preserve">
    <value>Удалить {0}</value>
  </data>
  <data name="RemoveCategory.CloseButtonText" xml:space="preserve">
    <value>Нет</value>
  </data>
  <data name="RemoveCategory.Content" xml:space="preserve">
    <value>Точно удалить?</value>
  </data>
  <data name="RemoveCategory.PrimaryButtonText" xml:space="preserve">
    <value>Да</value>
  </data>
  <data name="RemoveCategory.Title" xml:space="preserve">
    <value>Удалить {0}</value>
  </data>
  <data name="ServerProfile.Copy.ToolTipService.ToolTip" xml:space="preserve">
    <value>Копировать</value>
  </data>
  <data name="ServerProfile.Dialog.CloseButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ServerProfile.Dialog.PrimaryButtonText" xml:space="preserve">
    <value>Добавить</value>
  </data>
  <data name="ServerProfile.Dialog.Title" xml:space="preserve">
    <value>Профиль сервера</value>
  </data>
  <data name="ServerProfile.ErrorInvalidAddress" xml:space="preserve">
    <value>Неверный адрес сервера</value>
  </data>
  <data name="ServerProfile.ErrorLocalHost" xml:space="preserve">
    <value>Вам может понадобиться выполнить эту команду, чтобы разрешить доступ к localhost{0}После этого перезапустите приложение</value>
  </data>
  <data name="ServerProfile.ErrorNoAddress" xml:space="preserve">
    <value>Пустой адрес сервера</value>
  </data>
  <data name="ServerProfile.ErrorNoName" xml:space="preserve">
    <value>Пустое имя профиля</value>
  </data>
  <data name="ServerProfile.ProfileAddress.PlaceholderText" xml:space="preserve">
    <value>Адрес сервера</value>
  </data>
  <data name="ServerProfile.ProfileApiKey.PlaceholderText" xml:space="preserve">
    <value>API-ключ</value>
  </data>
  <data name="ServerProfile.ProfileName.PlaceholderText" xml:space="preserve">
    <value>Имя профиля</value>
  </data>
</root>
