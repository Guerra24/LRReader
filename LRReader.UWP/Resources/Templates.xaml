<ResourceDictionary
	x:Class="LRReader.UWP.Resources.Templates"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="using:LRReader.UWP.Views.Controls"
	xmlns:items="using:LRReader.UWP.Views.Items"
	xmlns:media="using:CommunityToolkit.WinUI.Media"
	xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	xmlns:services="using:LRReader.Shared.Services">

	<Style BasedOn="{StaticResource DefaultArchiveImage}" TargetType="items:ArchiveImage" />

	<Style x:Key="DefaultArchiveImage" TargetType="items:ArchiveImage">
		<Setter Property="Width" Value="200" />
		<Setter Property="Height" Value="275" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="items:ArchiveImage">
					<Grid x:Name="Root" Background="Transparent">
						<Grid.ContextFlyout>
							<MenuFlyout>
								<MenuFlyoutItem x:Uid="/Items/ArchiveImage/Reload" Command="{x:Bind Data.ReloadCommand}" Icon="Refresh">
									<MenuFlyoutItem.CommandParameter>
										<x:Boolean>True</x:Boolean>
									</MenuFlyoutItem.CommandParameter>
								</MenuFlyoutItem>
							</MenuFlyout>
						</Grid.ContextFlyout>
						<Border HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="{ThemeResource ControlCornerRadius}">
							<Image x:Name="Thumbnail" MaxHeight="275" Source="{Binding Data.Thumbnail, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ObjectToBitmapImage}}" />
						</Border>
						<Grid Visibility="{x:Bind Data.MissingImage, Mode=OneWay}">
							<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="34" Glyph="&#xE8CD;" />
						</Grid>
						<Grid
							x:Name="Overlay" Margin="4" HorizontalAlignment="Stretch"
							VerticalAlignment="Bottom">
							<Grid.RenderTransform>
								<TranslateTransform x:Name="OverlayTransform" />
							</Grid.RenderTransform>
							<StackPanel
								Padding="6,2" HorizontalAlignment="Left" Orientation="Horizontal"
								Spacing="4"
								Style="{StaticResource ItemOverlayStackPanel}"
								Visibility="{x:Bind Data.ShowExtraDetails, Mode=OneWay}">
								<TextBlock
									Grid.Column="1" FontSize="16"
									Foreground="{ThemeResource TextFillColorPrimaryBrush}"
									Text="{x:Bind Data.Resolution, Mode=OneWay}" />
								<TextBlock FontSize="16" Foreground="{ThemeResource TextFillColorPrimaryBrush}" Text="{x:Bind Data.Format, Mode=OneWay}" />
							</StackPanel>
							<StackPanel
								HorizontalAlignment="Right" Orientation="Horizontal"
								Style="{StaticResource ItemOverlayStackPanel}"
								Visibility="{Binding Data.HideOverlay, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolNegationConverter}}">
								<TextBlock
									Padding="6,2" FontSize="16"
									Foreground="{ThemeResource TextFillColorPrimaryBrush}"
									Text="{x:Bind Data.Page, Mode=OneWay}" />
							</StackPanel>
						</Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Visible" />
								<VisualState x:Name="Hidden">
									<VisualState.Setters>
										<Setter Target="Overlay.Visibility" Value="Collapsed" />
										<Setter Target="OverlayTransform.Y" Value="32" />
									</VisualState.Setters>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.15">
										<VisualTransition.GeneratedEasingFunction>
											<QuadraticEase EasingMode="EaseOut" />
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ItemOverlayGrid" TargetType="Grid">
		<Setter Property="Background" Value="{ThemeResource GridOverGridBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource SurfaceStrokeColorFlyoutBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
	</Style>

	<Style x:Key="ItemOverlayStackPanel" TargetType="StackPanel">
		<Setter Property="Background" Value="{ThemeResource GridOverGridBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource SurfaceStrokeColorFlyoutBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
	</Style>

	<Style BasedOn="{StaticResource DefaultArchiveItem}" TargetType="items:GenericArchiveItem" />

	<Style x:Key="BookmarkedArchiveItem" TargetType="items:GenericArchiveItem">
		<Setter Property="Width" Value="200" />
		<Setter Property="Height" Value="150" />
		<Setter Property="DecodePixelWidth" Value="200" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="items:GenericArchiveItem">
					<Grid x:Name="Root" Background="Transparent">
						<Grid.ContextFlyout>
							<MenuFlyout>
								<MenuFlyoutItem x:Uid="/Items/Archive/OpenTab" Click="{x:Bind MenuFlyoutItem_Click}" Icon="Add" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Bookmark"
									Click="{x:Bind Add_Click}"
									Icon="Favorite"
									Visibility="{Binding ViewModel.Bookmarked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NegateBoolToVisibilityConverter}}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Unbookmark"
									Background="{ThemeResource UnbookmarkItem}"
									Click="{x:Bind Remove_Click}"
									Icon="Unfavorite"
									Visibility="{x:Bind ViewModel.Bookmarked, Mode=OneWay}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Edit"
									Command="{x:Bind ViewModel.EditCommand}"
									Icon="Edit"
									Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}" />
								<MenuFlyoutItem x:Uid="/Items/Archive/Categories" Command="{x:Bind ViewModel.EditCategoriesCommand}" Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}">
									<MenuFlyoutItem.Icon>
										<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE8B7;" />
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Download"
									Click="{x:Bind DownloadMenuItem_Click}"
									Icon="Download"
									IsEnabled="{Binding ViewModel.Downloading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolNegationConverter}}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Delete"
									Command="{x:Bind ViewModel.DeleteCommand}"
									Icon="Delete"
									Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}" />
							</MenuFlyout>
						</Grid.ContextFlyout>
						<muxc:ParallaxView x:Name="Parallax" x:FieldModifier="public" VerticalShift="100">
							<Image Name="Thumbnail" Source="{Binding ViewModel.Thumbnail, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ObjectToBitmapImage}}" Stretch="UniformToFill" />
						</muxc:ParallaxView>
						<Grid>
							<Grid.Background>
								<media:BackdropBlurBrush Amount="4.0" />
							</Grid.Background>
							<Grid.RowDefinitions>
								<RowDefinition Height="2.5*" />
								<RowDefinition Height="1*" />
							</Grid.RowDefinitions>
							<Grid Grid.RowSpan="2" Visibility="{x:Bind ViewModel.MissingImage, Mode=OneWay}">
								<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="34" Glyph="&#xE8CD;" />
							</Grid>
							<Rectangle Grid.RowSpan="2" Fill="{ThemeResource ThumbnailSmoke}" />
							<TextBlock
								Padding="5,0,5,0" HorizontalAlignment="Center" VerticalAlignment="Center"
								FontSize="16" FontWeight="Medium"
								Text="{x:Bind ViewModel.Archive.title, Mode=OneWay}"
								TextAlignment="Center" TextTrimming="WordEllipsis" TextWrapping="WrapWholeWords"
								ToolTipService.ToolTip="{x:Bind ViewModel.Archive.title, Mode=OneWay}" />
							<TextBlock
								Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"
								FontSize="18"
								Visibility="{x:Bind ViewModel.Bookmarked, Mode=OneWay}">
								<Run Text="{x:Bind ViewModel.BookmarkedArchive.BookmarkProgressDisplay, Mode=OneWay}" />/<Run Text="{x:Bind ViewModel.Pages, Mode=OneWay}" />
							</TextBlock>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CategoryEditArchive" TargetType="items:GenericArchiveItem">
		<Setter Property="Width" Value="250" />
		<Setter Property="DecodePixelHeight" Value="138" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="items:GenericArchiveItem">
					<Grid x:Name="Root" Background="Transparent">
						<Grid.Resources>
							<Flyout x:Name="TagsFlyout" FlyoutPresenterStyle="{StaticResource TagsFlyoutStylePresenter}">
								<controls:ArchiveTags ItemClickCommand="{x:Bind ViewModel.TagClickCommand}" ItemsSource="{x:Bind ViewModel.Archive.TagsGroups, Mode=OneWay}" MaxTagsWidth="300" />
							</Flyout>
						</Grid.Resources>
						<Grid.ContextFlyout>
							<MenuFlyout>
								<MenuFlyoutItem x:Uid="/Items/Archive/OpenTab" Click="{x:Bind MenuFlyoutItem_Click}" Icon="Add" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Bookmark"
									Click="{x:Bind Add_Click}"
									Icon="Favorite"
									Visibility="{Binding ViewModel.Bookmarked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NegateBoolToVisibilityConverter}}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Unbookmark"
									Background="{ThemeResource UnbookmarkItem}"
									Click="{x:Bind Remove_Click}"
									Icon="Unfavorite"
									Visibility="{x:Bind ViewModel.Bookmarked, Mode=OneWay}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Edit"
									Command="{x:Bind ViewModel.EditCommand}"
									Icon="Edit"
									Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}" />
								<!--<MenuFlyoutItem x:Uid="/Items/Archive/Categories" Click="{x:Bind CategoriesButton_Click}" Visibility="{x:Bind flags.CategoriesEnabledEdit}">
									<MenuFlyoutItem.Icon>
										<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE8B7;" />
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>-->
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Download"
									Click="{x:Bind DownloadMenuItem_Click}"
									Icon="Download"
									IsEnabled="{Binding ViewModel.Downloading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolNegationConverter}}" />
								<!--<MenuFlyoutItem
									x:Uid="/Items/Archive/Delete"
									Click="{x:Bind DeleteMenuItem_Click}"
									Icon="Delete"
									Visibility="{x:Bind flags.V078Edit}" />-->
							</MenuFlyout>
						</Grid.ContextFlyout>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid>
							<Grid Width="95">
								<Image
									x:Name="Thumbnail" Width="100" Height="137.5"
									HorizontalAlignment="Center"
									Source="{Binding ViewModel.Thumbnail, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ObjectToBitmapImage}}" />
							</Grid>
							<Grid Visibility="{x:Bind ViewModel.MissingImage, Mode=OneWay}">
								<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="34" Glyph="&#xE8CD;" />
							</Grid>
							<Grid
								Margin="2,0,0,2" HorizontalAlignment="Left" VerticalAlignment="Bottom"
								Style="{StaticResource ItemOverlayGrid}"
								Visibility="{x:Bind ViewModel.Bookmarked, Mode=OneWay}">
								<TextBlock Padding="6,2" FontSize="16">
									<Run Text="{x:Bind ViewModel.BookmarkedArchive.BookmarkProgressDisplay, Mode=OneWay}" />/<Run Text="{x:Bind ViewModel.Pages, Mode=OneWay}" />
								</TextBlock>
							</Grid>
							<Grid
								Margin="0,0,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom"
								Style="{StaticResource ItemOverlayGrid}"
								Visibility="{x:Bind ViewModel.IsNew, Mode=OneWay}">
								<TextBlock x:Uid="/Items/Archive/New" Padding="6,2" FontSize="16" />
							</Grid>
						</Grid>
						<Grid Grid.Column="1">
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="24" />
							</Grid.RowDefinitions>
							<TextBlock
								Grid.Row="0" MaxHeight="114"
								Padding="5,0" FontSize="15"
								Text="{x:Bind ViewModel.Archive.title, Mode=OneWay}"
								TextTrimming="CharacterEllipsis" TextWrapping="WrapWholeWords"
								ToolTipService.ToolTip="{x:Bind ViewModel.Archive.title, Mode=OneWay}" />
							<Grid
								x:Name="TagsGrid" Grid.Row="1" Background="Transparent"
								PointerEntered="{x:Bind TagsGrid_PointerEntered}"
								PointerExited="{x:Bind TagsGrid_PointerExited}">
								<TextBlock
									HorizontalAlignment="Center" VerticalAlignment="Center"
									Foreground="{ThemeResource ArchiveTagsLine}"
									Text="Tags..." />
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CompactArchiveItem" TargetType="items:GenericArchiveItem">
		<Setter Property="Width" Value="250" />
		<Setter Property="DecodePixelHeight" Value="138" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="items:GenericArchiveItem">
					<Grid x:Name="Root" Background="Transparent">
						<Grid.Resources>
							<Flyout x:Name="TagsFlyout" FlyoutPresenterStyle="{StaticResource TagsFlyoutStylePresenter}">
								<controls:ArchiveTags ItemClickCommand="{x:Bind ViewModel.TagClickCommand}" ItemsSource="{x:Bind ViewModel.Archive.TagsGroups, Mode=OneWay}" MaxTagsWidth="300" />
							</Flyout>
						</Grid.Resources>
						<Grid.ContextFlyout>
							<MenuFlyout>
								<MenuFlyoutItem x:Uid="/Items/Archive/OpenTab" Click="{x:Bind MenuFlyoutItem_Click}" Icon="Add" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Bookmark"
									Click="{x:Bind Add_Click}"
									Icon="Favorite"
									Visibility="{Binding ViewModel.Bookmarked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NegateBoolToVisibilityConverter}}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Unbookmark"
									Background="{ThemeResource UnbookmarkItem}"
									Click="{x:Bind Remove_Click}"
									Icon="Unfavorite"
									Visibility="{x:Bind ViewModel.Bookmarked, Mode=OneWay}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Edit"
									Command="{x:Bind ViewModel.EditCommand}"
									Icon="Edit"
									Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}" />
								<MenuFlyoutItem x:Uid="/Items/Archive/Categories" Command="{x:Bind ViewModel.EditCategoriesCommand}" Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}">
									<MenuFlyoutItem.Icon>
										<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE8B7;" />
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Download"
									Click="{x:Bind DownloadMenuItem_Click}"
									Icon="Download"
									IsEnabled="{Binding ViewModel.Downloading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolNegationConverter}}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Delete"
									Command="{x:Bind ViewModel.DeleteCommand}"
									Icon="Delete"
									Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}" />
							</MenuFlyout>
						</Grid.ContextFlyout>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid>
							<Grid Width="95">
								<Image
									x:Name="Thumbnail" Width="100" Height="137.5"
									HorizontalAlignment="Center" Source="{Binding ViewModel.Thumbnail, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ObjectToBitmapImage}}" />
							</Grid>
							<Grid Visibility="{x:Bind ViewModel.MissingImage, Mode=OneWay}">
								<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="34" Glyph="&#xE8CD;" />
							</Grid>
							<Grid
								Margin="2,0,0,2" HorizontalAlignment="Left" VerticalAlignment="Bottom"
								Style="{StaticResource ItemOverlayGrid}"
								Visibility="{x:Bind ViewModel.Bookmarked, Mode=OneWay}">
								<TextBlock Padding="6,2" FontSize="16">
									<Run Text="{x:Bind ViewModel.BookmarkedArchive.BookmarkProgressDisplay, Mode=OneWay}" />/<Run Text="{x:Bind ViewModel.Pages, Mode=OneWay}" />
								</TextBlock>
							</Grid>
							<Grid
								Margin="0,0,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom"
								Style="{StaticResource ItemOverlayGrid}"
								Visibility="{x:Bind ViewModel.IsNew, Mode=OneWay}">
								<TextBlock x:Uid="/Items/Archive/New" Padding="6,2" FontSize="16" />
							</Grid>
						</Grid>
						<Grid Grid.Column="1">
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="24" />
							</Grid.RowDefinitions>
							<TextBlock
								Grid.Row="0" MaxHeight="114"
								Padding="5,0" FontSize="15"
								Text="{x:Bind ViewModel.Archive.title, Mode=OneWay}"
								TextTrimming="CharacterEllipsis" TextWrapping="WrapWholeWords"
								ToolTipService.ToolTip="{x:Bind ViewModel.Archive.title, Mode=OneWay}" />
							<Grid
								x:Name="TagsGrid" Grid.Row="1" Background="Transparent"
								PointerEntered="{x:Bind TagsGrid_PointerEntered}"
								PointerExited="{x:Bind TagsGrid_PointerExited}">
								<TextBlock
									HorizontalAlignment="Center" VerticalAlignment="Center"
									Foreground="{ThemeResource ArchiveTagsLine}"
									Text="Tags..." />
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultArchiveItem" TargetType="items:GenericArchiveItem">
		<Setter Property="Width" Value="200" />
		<Setter Property="DecodePixelHeight" Value="275" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="items:GenericArchiveItem">
					<Grid x:Name="Root" Background="Transparent">
						<Grid.Resources>
							<Flyout x:Name="TagsFlyout" FlyoutPresenterStyle="{StaticResource TagsFlyoutStylePresenter}">
								<controls:ArchiveTags ItemClickCommand="{x:Bind ViewModel.TagClickCommand}" ItemsSource="{x:Bind ViewModel.Archive.TagsGroups, Mode=OneWay}" MaxTagsWidth="300" />
							</Flyout>
						</Grid.Resources>
						<Grid.ContextFlyout>
							<MenuFlyout>
								<MenuFlyoutItem x:Uid="/Items/Archive/OpenTab" Click="{x:Bind MenuFlyoutItem_Click}" Icon="Add" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Bookmark"
									Click="{x:Bind Add_Click}"
									Icon="Favorite"
									Visibility="{Binding ViewModel.Bookmarked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NegateBoolToVisibilityConverter}}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Unbookmark"
									Background="{ThemeResource UnbookmarkItem}"
									Click="{x:Bind Remove_Click}"
									Icon="Unfavorite"
									Visibility="{x:Bind ViewModel.Bookmarked, Mode=OneWay}" />
								<MenuFlyoutSubItem Text="Rating">
									<MenuFlyoutSubItem.Icon>
										<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE728;" />
									</MenuFlyoutSubItem.Icon>
									<muxc:RadioMenuFlyoutItem Text="&#xE735;" FontFamily="{StaticResource SymbolThemeFontFamily}" GroupName="Rating" />
									<muxc:RadioMenuFlyoutItem Text="&#xE735; &#xE735;" FontFamily="{StaticResource SymbolThemeFontFamily}" GroupName="Rating" />
									<muxc:RadioMenuFlyoutItem Text="&#xE735; &#xE735; &#xE735;" FontFamily="{StaticResource SymbolThemeFontFamily}" GroupName="Rating" />
									<muxc:RadioMenuFlyoutItem Text="&#xE735; &#xE735; &#xE735; &#xE735;" FontFamily="{StaticResource SymbolThemeFontFamily}" GroupName="Rating" />
									<muxc:RadioMenuFlyoutItem Text="&#xE735; &#xE735; &#xE735; &#xE735; &#xE735;" FontFamily="{StaticResource SymbolThemeFontFamily}" GroupName="Rating" />
									<MenuFlyoutSeparator />
									<MenuFlyoutItem Text="Clear" />
								</MenuFlyoutSubItem>
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Edit"
									Command="{x:Bind ViewModel.EditCommand}"
									Icon="Edit"
									Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}" />
								<MenuFlyoutItem x:Uid="/Items/Archive/Categories" Command="{x:Bind ViewModel.EditCategoriesCommand}" Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}">
									<MenuFlyoutItem.Icon>
										<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE8B7;" />
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Download"
									Click="{x:Bind DownloadMenuItem_Click}"
									Icon="Download"
									IsEnabled="{Binding ViewModel.Downloading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolNegationConverter}}" />
								<MenuFlyoutItem
									x:Uid="/Items/Archive/Delete"
									Command="{x:Bind ViewModel.DeleteCommand}"
									Icon="Delete"
									Visibility="{x:Bind services:Service.Settings.Profile.HasApiKey}" />
							</MenuFlyout>
						</Grid.ContextFlyout>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="275" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<TextBlock
							Grid.Row="0" Padding="5,0" HorizontalAlignment="Center"
							FontSize="16"
							Text="{x:Bind ViewModel.Archive.title, Mode=OneWay}"
							TextTrimming="CharacterEllipsis"
							ToolTipService.ToolTip="{x:Bind ViewModel.Archive.title, Mode=OneWay}" />
						<Border
							Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"
							CornerRadius="{ThemeResource ControlCornerRadius}">
							<Image x:Name="Thumbnail" MaxHeight="275" Source="{Binding ViewModel.Thumbnail, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ObjectToBitmapImage}}" />
						</Border>
						<Grid Grid.Row="1">
							<Grid Visibility="{x:Bind ViewModel.MissingImage, Mode=OneWay}">
								<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="34" Glyph="&#xE8CD;" />
							</Grid>
							<Grid Visibility="{x:Bind ViewModel.Downloading, Mode=OneWay}">
								<Grid.Background>
									<media:BackdropBlurBrush Amount="4.0" />
								</Grid.Background>
								<Rectangle Fill="{ThemeResource ThumbnailSmoke}" />
								<muxc:ProgressBar Background="Transparent" IsIndeterminate="True" />
							</Grid>
							<Grid
								Margin="4,0,0,4" HorizontalAlignment="Left" VerticalAlignment="Bottom"
								Style="{StaticResource ItemOverlayGrid}"
								Visibility="{x:Bind ViewModel.Bookmarked, Mode=OneWay}">
								<TextBlock Padding="6,2" FontSize="16">
									<Run Text="{x:Bind ViewModel.BookmarkedArchive.BookmarkProgressDisplay, Mode=OneWay}" />/<Run Text="{x:Bind ViewModel.Pages, Mode=OneWay}" />
								</TextBlock>
							</Grid>
							<Grid
								Margin="0,0,4,4" HorizontalAlignment="Right" VerticalAlignment="Bottom"
								Style="{StaticResource ItemOverlayGrid}"
								Visibility="{x:Bind ViewModel.IsNew, Mode=OneWay}">
								<TextBlock x:Uid="/Items/Archive/New" Padding="6,2" FontSize="16" />
							</Grid>
						</Grid>
						<Grid
							x:Name="TagsGrid" Grid.Row="2"
							PointerEntered="{x:Bind TagsGrid_PointerEntered}"
							PointerExited="{x:Bind TagsGrid_PointerExited}">
							<TextBlock
								Grid.Row="2" Padding="2,0"
								Text="{x:Bind ViewModel.Archive.TagsClean, Mode=OneWay}"
								TextTrimming="CharacterEllipsis" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style BasedOn="{StaticResource DefaultModernInputStyle}" TargetType="controls:ModernInput" />

	<Style x:Key="GroupedModernInputStyle" BasedOn="{StaticResource DefaultModernInputStyle}" TargetType="controls:ModernInput">
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="Transitions" Value="{x:Null}" />
		<Setter Property="TextMargin" Value="0,5,0,5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:ModernInput">
					<Grid
						x:Name="Root"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BackgroundSizing="InnerBorderEdge"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<Grid.Resources>
							<Thickness x:Key="RadioButtonsTopHeaderMargin">0</Thickness>
							<Style BasedOn="{StaticResource DefaultToggleSwitchStyle}" TargetType="ToggleSwitch">
								<Setter Property="Template" Value="{StaticResource LeftContentToggleSwitch}" />
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
							<ColumnDefinition MaxWidth="400" />
						</Grid.ColumnDefinitions>

						<Grid.BackgroundTransition>
							<BrushTransition Duration="0:0:0.083" />
						</Grid.BackgroundTransition>
						<FontIcon
							x:Name="LeftFontIcon" Margin="0,0,16,0"
							FontFamily="{StaticResource SymbolThemeFontFamily}"
							Glyph="{x:Bind Glyph, Mode=OneWay}"
							Visibility="{Binding Glyph, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource StringVisibilityConverter}}" />
						<ContentPresenter
							x:Name="LeftIcon" Margin="0,0,16,0"
							Content="{x:Bind Icon, Mode=OneWay}"
							Visibility="{Binding Icon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EmptyObjectToObjectConverter}}" />
						<StackPanel Grid.Column="1" Margin="{TemplateBinding TextMargin}" VerticalAlignment="Center">
							<TextBlock x:Name="TitleBlock" Text="{x:Bind Title, Mode=OneWay}" />
							<TextBlock
								x:Name="DescriptionBlock" FontSize="12"
								Foreground="{ThemeResource TextFillColorSecondaryBrush}"
								Text="{x:Bind Description, Mode=OneWay}"
								TextWrapping="WrapWholeWords"
								Visibility="{Binding Description, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource StringVisibilityConverter}}" />
						</StackPanel>
						<ContentPresenter
							Grid.Column="2" Margin="0,0,16,0"
							HorizontalAlignment="{x:Bind InputHorizontalAlignment, Mode=OneWay}"
							VerticalAlignment="Center"
							Content="{x:Bind Control, Mode=OneWay}" />
						<FontIcon
							x:Name="RightFontIcon" Grid.Column="2" Margin="0,0,16,0"
							HorizontalAlignment="Right" VerticalAlignment="Center"
							FontFamily="{StaticResource SymbolThemeFontFamily}"
							FontSize="14"
							Glyph="{x:Bind RightGlyph, Mode=OneWay}"
							Visibility="{x:Bind IsButton}" />

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding IsEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolNegationConverter}}" />
									</VisualState.StateTriggers>
									<Storyboard>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>-->
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
										</ObjectAnimationUsingKeyFrames>-->
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftFontIcon" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftIcon" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleBlock" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DescriptionBlock" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RightFontIcon" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultModernInputStyle" TargetType="controls:ModernInput">
		<Setter Property="RightColumnWidth" Value="Auto" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="{StaticResource ExpanderHeaderPadding}" />
		<Setter Property="Background" Value="{ThemeResource ExpanderHeaderBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
		<Setter Property="BorderThickness" Value="{ThemeResource ExpanderHeaderBorderThickness}" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="TextMargin" Value="0,16,0,16" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="Transitions">
			<Setter.Value>
				<TransitionCollection>
					<RepositionThemeTransition IsStaggeringEnabled="False" />
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:ModernInput">
					<Grid
						x:Name="Root"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BackgroundSizing="InnerBorderEdge"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<Grid.Resources>
							<Thickness x:Key="RadioButtonsTopHeaderMargin">0</Thickness>
							<Style BasedOn="{StaticResource DefaultToggleSwitchStyle}" TargetType="ToggleSwitch">
								<Setter Property="Template" Value="{StaticResource LeftContentToggleSwitch}" />
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
							<ColumnDefinition MaxWidth="400" Width="{x:Bind RightColumnWidth, Mode=OneWay}" />
						</Grid.ColumnDefinitions>

						<Grid.BackgroundTransition>
							<BrushTransition Duration="0:0:0.083" />
						</Grid.BackgroundTransition>
						<FontIcon
							x:Name="LeftFontIcon" Margin="0,0,16,0"
							FontFamily="{StaticResource SymbolThemeFontFamily}"
							Glyph="{x:Bind Glyph, Mode=OneWay}"
							Visibility="{Binding Glyph, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource StringVisibilityConverter}}" />
						<ContentPresenter
							x:Name="LeftIcon" Margin="0,0,16,0"
							Content="{x:Bind Icon, Mode=OneWay}"
							Visibility="{Binding Icon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EmptyObjectToObjectConverter}}" />
						<StackPanel Grid.Column="1" Margin="{TemplateBinding TextMargin}" VerticalAlignment="Center">
							<TextBlock x:Name="TitleBlock" Text="{x:Bind Title, Mode=OneWay}" />
							<TextBlock
								x:Name="DescriptionBlock" FontSize="12"
								Foreground="{ThemeResource TextFillColorSecondaryBrush}"
								Text="{x:Bind Description, Mode=OneWay}"
								TextWrapping="WrapWholeWords"
								Visibility="{Binding Description, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource StringVisibilityConverter}}" />
						</StackPanel>
						<ContentPresenter
							Grid.Column="2" Margin="0,0,16,0"
							HorizontalAlignment="{x:Bind InputHorizontalAlignment, Mode=OneWay}"
							VerticalAlignment="Center"
							Content="{x:Bind Control, Mode=OneWay}" />
						<FontIcon
							x:Name="RightFontIcon" Grid.Column="2" Margin="0,0,16,0"
							HorizontalAlignment="Right" VerticalAlignment="Center"
							FontFamily="{StaticResource SymbolThemeFontFamily}"
							FontSize="14"
							Glyph="{x:Bind RightGlyph, Mode=OneWay}"
							Visibility="{x:Bind IsButton}" />

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding IsEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolNegationConverter}}" />
									</VisualState.StateTriggers>
									<Storyboard>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
										</ObjectAnimationUsingKeyFrames>-->
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftFontIcon" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftIcon" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleBlock" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DescriptionBlock" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RightFontIcon" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="controls:ModernGroup">
		<Setter Property="Margin" Value="0,0,0,32" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Transitions">
			<Setter.Value>
				<TransitionCollection>
					<RepositionThemeTransition IsStaggeringEnabled="False" />
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:ModernGroup">
					<StackPanel>
						<TextBlock
							Margin="1,0,0,8" FontWeight="Bold"
							Text="{x:Bind Title, Mode=OneWay}"
							Visibility="{Binding Title, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource StringVisibilityConverter}}" />
						<muxc:ItemsRepeater ItemsSource="{x:Bind Content, Mode=OneWay}">
							<muxc:ItemsRepeater.Layout>
								<muxc:StackLayout DisableVirtualization="True" Spacing="3" />
							</muxc:ItemsRepeater.Layout>
						</muxc:ItemsRepeater>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TagsFlyoutStylePresenter" BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
		<Setter Property="Padding" Value="4" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="FlyoutPresenter">
					<Border
						Background="{TemplateBinding Background}"
						BackgroundSizing="InnerBorderEdge"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<ScrollViewer
							x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
							VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
							ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
							<ContentPresenter
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTransitions="{TemplateBinding ContentTransitions}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
