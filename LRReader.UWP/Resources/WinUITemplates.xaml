<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
	xmlns:controls="using:LRReader.UWP.Views.Controls"
	xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	xmlns:contract13="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 13)">

	<!--  https://github.com/microsoft/microsoft-ui-xaml/blob/main/dev/CommonStyles/GridViewItem_themeresources_21h1.xaml  -->
	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Default">
			<CornerRadius x:Key="GridViewItemCornerRadius">4</CornerRadius>
			<CornerRadius x:Key="GridViewItemCheckBoxCornerRadius">3</CornerRadius>
			<Thickness x:Key="GridViewItemSelectedBorderThickness">2</Thickness>
			<StaticResource x:Key="GridViewItemBackground" ResourceKey="ControlFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemForeground" ResourceKey="TextFillColorPrimaryBrush" />
			<StaticResource x:Key="GridViewItemPointerOverBorderBrush" ResourceKey="ControlStrokeColorOnAccentTertiaryBrush" />
			<StaticResource x:Key="GridViewItemSelectedBorderBrush" ResourceKey="AccentFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemSelectedPointerOverBorderBrush" ResourceKey="AccentFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemSelectedPressedBorderBrush" ResourceKey="AccentFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemSelectedDisabledBorderBrush" ResourceKey="AccentFillColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemSelectedInnerBorderBrush" ResourceKey="ControlSolidFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBrush" ResourceKey="TextOnAccentFillColorPrimaryBrush" />
			<StaticResource x:Key="GridViewItemCheckPressedBrush" ResourceKey="TextOnAccentFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemCheckDisabledBrush" ResourceKey="TextOnAccentFillColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxBrush" ResourceKey="ControlOnImageFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxPointerOverBrush" ResourceKey="ControlOnImageFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxPressedBrush" ResourceKey="ControlOnImageFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxDisabledBrush" ResourceKey="ControlOnImageFillColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxSelectedBrush" ResourceKey="AccentFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxSelectedPointerOverBrush" ResourceKey="AccentFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxSelectedPressedBrush" ResourceKey="AccentFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxSelectedDisabledBrush" ResourceKey="AccentFillColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxBorderBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxPointerOverBorderBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxPressedBorderBrush" ResourceKey="ControlStrongStrokeColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxDisabledBorderBrush" ResourceKey="ControlStrongStrokeColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemFocusVisualPrimaryBrush" ResourceKey="FocusStrokeColorOuterBrush" />
			<StaticResource x:Key="GridViewItemFocusVisualSecondaryBrush" ResourceKey="FocusStrokeColorInnerBrush" />
			<StaticResource x:Key="GridViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemForegroundPointerOver" ResourceKey="TextFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundSelected" ResourceKey="SubtleFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemForegroundSelected" ResourceKey="TextFillColorPrimaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundSelectedPointerOver" ResourceKey="SubtleFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundSelectedPressed" ResourceKey="SubtleFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundSelectedDisabled" ResourceKey="SubtleFillColorSecondaryBrush" />
		</ResourceDictionary>
		<ResourceDictionary x:Key="HighContrast">
			<CornerRadius x:Key="GridViewItemCornerRadius">4</CornerRadius>
			<CornerRadius x:Key="GridViewItemCheckBoxCornerRadius">3</CornerRadius>
			<Thickness x:Key="GridViewItemSelectedBorderThickness">2</Thickness>
			<SolidColorBrush x:Key="GridViewItemBackground" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemForeground" Color="{ThemeResource SystemColorWindowTextColor}" />
			<SolidColorBrush x:Key="GridViewItemPointerOverBorderBrush" Color="{ThemeResource SystemColorHighlightColor}" />
			<SolidColorBrush x:Key="GridViewItemSelectedBorderBrush" Color="{ThemeResource SystemColorHighlightColor}" />
			<SolidColorBrush x:Key="GridViewItemSelectedPointerOverBorderBrush" Color="{ThemeResource SystemColorHighlightColor}" />
			<SolidColorBrush x:Key="GridViewItemSelectedPressedBorderBrush" Color="{ThemeResource SystemColorHighlightColor}" />
			<SolidColorBrush x:Key="GridViewItemSelectedDisabledBorderBrush" Color="{ThemeResource SystemColorGrayTextColor}" />
			<SolidColorBrush x:Key="GridViewItemSelectedInnerBorderBrush" Color="{ThemeResource SystemColorWindowTextColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBrush" Color="{ThemeResource SystemColorWindowTextColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckPressedBrush" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckDisabledBrush" Color="{ThemeResource SystemColorGrayTextColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxBrush" Color="{ThemeResource SystemColorButtonFaceColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxPointerOverBrush" Color="{ThemeResource SystemColorButtonFaceColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxPressedBrush" Color="{ThemeResource SystemColorButtonFaceColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxDisabledBrush" Color="{ThemeResource SystemColorButtonFaceColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxSelectedBrush" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxSelectedPointerOverBrush" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxSelectedPressedBrush" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxSelectedDisabledBrush" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxBorderBrush" Color="{ThemeResource SystemColorButtonTextColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxPointerOverBorderBrush" Color="{ThemeResource SystemColorButtonTextColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxPressedBorderBrush" Color="{ThemeResource SystemColorButtonTextColor}" />
			<SolidColorBrush x:Key="GridViewItemCheckBoxDisabledBorderBrush" Color="{ThemeResource SystemColorButtonTextColor}" />
			<SolidColorBrush x:Key="GridViewItemFocusVisualPrimaryBrush" Color="{ThemeResource SystemColorWindowTextColor}" />
			<SolidColorBrush x:Key="GridViewItemFocusVisualSecondaryBrush" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemBackgroundPointerOver" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemForegroundPointerOver" Color="{ThemeResource SystemColorWindowTextColor}" />
			<SolidColorBrush x:Key="GridViewItemBackgroundSelected" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemForegroundSelected" Color="{ThemeResource SystemColorWindowTextColor}" />
			<SolidColorBrush x:Key="GridViewItemBackgroundSelectedPointerOver" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemBackgroundPressed" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemBackgroundSelectedPressed" Color="{ThemeResource SystemColorWindowColor}" />
			<SolidColorBrush x:Key="GridViewItemBackgroundSelectedDisabled" Color="{ThemeResource SystemColorWindowColor}" />
		</ResourceDictionary>
		<ResourceDictionary x:Key="Light">
			<CornerRadius x:Key="GridViewItemCornerRadius">4</CornerRadius>
			<CornerRadius x:Key="GridViewItemCheckBoxCornerRadius">3</CornerRadius>
			<Thickness x:Key="GridViewItemSelectedBorderThickness">2</Thickness>
			<StaticResource x:Key="GridViewItemBackground" ResourceKey="ControlFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemForeground" ResourceKey="TextFillColorPrimaryBrush" />
			<StaticResource x:Key="GridViewItemPointerOverBorderBrush" ResourceKey="ControlStrokeColorOnAccentTertiaryBrush" />
			<StaticResource x:Key="GridViewItemSelectedBorderBrush" ResourceKey="AccentFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemSelectedPointerOverBorderBrush" ResourceKey="AccentFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemSelectedPressedBorderBrush" ResourceKey="AccentFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemSelectedDisabledBorderBrush" ResourceKey="AccentFillColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemSelectedInnerBorderBrush" ResourceKey="ControlSolidFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBrush" ResourceKey="TextOnAccentFillColorPrimaryBrush" />
			<StaticResource x:Key="GridViewItemCheckPressedBrush" ResourceKey="TextOnAccentFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemCheckDisabledBrush" ResourceKey="TextOnAccentFillColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxBrush" ResourceKey="ControlOnImageFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxPointerOverBrush" ResourceKey="ControlOnImageFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxPressedBrush" ResourceKey="ControlOnImageFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxDisabledBrush" ResourceKey="ControlOnImageFillColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxSelectedBrush" ResourceKey="AccentFillColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxSelectedPointerOverBrush" ResourceKey="AccentFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxSelectedPressedBrush" ResourceKey="AccentFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxSelectedDisabledBrush" ResourceKey="AccentFillColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxBorderBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxPointerOverBorderBrush" ResourceKey="ControlStrongStrokeColorDefaultBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxPressedBorderBrush" ResourceKey="ControlStrongStrokeColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemCheckBoxDisabledBorderBrush" ResourceKey="ControlStrongStrokeColorDisabledBrush" />
			<StaticResource x:Key="GridViewItemFocusVisualPrimaryBrush" ResourceKey="FocusStrokeColorOuterBrush" />
			<StaticResource x:Key="GridViewItemFocusVisualSecondaryBrush" ResourceKey="FocusStrokeColorInnerBrush" />
			<StaticResource x:Key="GridViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemForegroundPointerOver" ResourceKey="TextFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundSelected" ResourceKey="SubtleFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemForegroundSelected" ResourceKey="TextFillColorPrimaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundSelectedPointerOver" ResourceKey="SubtleFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundSelectedPressed" ResourceKey="SubtleFillColorSecondaryBrush" />
			<StaticResource x:Key="GridViewItemBackgroundSelectedDisabled" ResourceKey="SubtleFillColorSecondaryBrush" />
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>

	<Style x:Key="WinUIGridViewItemStyle" TargetType="GridViewItem">
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Background" Value="{ThemeResource GridViewItemBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource GridViewItemForeground}" />
		<Setter Property="TabNavigation" Value="Local" />
		<Setter Property="IsHoldingEnabled" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,0,4,4" />
		<Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}" />
		<Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}" />
		<Setter Property="AllowDrop" Value="True" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="FocusVisualMargin" Value="-3" />
		<Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource GridViewItemFocusVisualPrimaryBrush}" />
		<Setter Property="FocusVisualPrimaryThickness" Value="2" />
		<Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource GridViewItemFocusVisualSecondaryBrush}" />
		<Setter Property="FocusVisualSecondaryThickness" Value="1" />
		<Setter Property="CornerRadius" Value="{ThemeResource GridViewItemCornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewItem">
					<ListViewItemPresenter
						x:Name="Root"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        Control.IsTemplateFocusTarget="True"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource GridViewItemSelectionCheckMarkVisualEnabled}"
                        CheckBrush="{ThemeResource GridViewItemCheckBrush}"
                        CheckBoxBrush="{ThemeResource GridViewItemCheckBoxBrush}"
                        DragBackground="{ThemeResource GridViewItemDragBackground}"
                        DragForeground="{ThemeResource GridViewItemDragForeground}"
                        FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}"
                        PlaceholderBackground="{ThemeResource GridViewItemPlaceholderBackground}"
                        PointerOverBackground="{ThemeResource GridViewItemBackgroundPointerOver}"
                        PointerOverForeground="{ThemeResource GridViewItemForegroundPointerOver}"
                        SelectedBackground="{ThemeResource GridViewItemBackgroundSelected}"
                        SelectedForeground="{ThemeResource GridViewItemForegroundSelected}"
                        SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}"
                        PressedBackground="{ThemeResource GridViewItemBackgroundPressed}"
                        SelectedPressedBackground="{ThemeResource GridViewItemBackgroundSelectedPressed}"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentMargin="{TemplateBinding Padding}"
                        CheckMode="{ThemeResource GridViewItemCheckMode}"
                        SelectedBorderThickness="{ThemeResource GridViewItemSelectedBorderThickness}"
                        SelectedPointerOverBorderBrush="{ThemeResource GridViewItemSelectedPointerOverBorderBrush}"
                        CornerRadius="{ThemeResource GridViewItemCornerRadius}"
                        contract13:CheckBoxCornerRadius="{ThemeResource GridViewItemCheckBoxCornerRadius}"
                        contract13:CheckPressedBrush="{ThemeResource GridViewItemCheckPressedBrush}"
                        contract13:CheckDisabledBrush="{ThemeResource GridViewItemCheckDisabledBrush}"
                        contract13:CheckBoxPointerOverBrush="{ThemeResource GridViewItemCheckBoxPointerOverBrush}"
                        contract13:CheckBoxPressedBrush="{ThemeResource GridViewItemCheckBoxPressedBrush}"
                        contract13:CheckBoxDisabledBrush="{ThemeResource GridViewItemCheckBoxDisabledBrush}"
                        contract13:CheckBoxSelectedBrush="{ThemeResource GridViewItemCheckBoxSelectedBrush}"
                        contract13:CheckBoxSelectedPointerOverBrush="{ThemeResource GridViewItemCheckBoxSelectedPointerOverBrush}"
                        contract13:CheckBoxSelectedPressedBrush="{ThemeResource GridViewItemCheckBoxSelectedPressedBrush}"
                        contract13:CheckBoxSelectedDisabledBrush="{ThemeResource GridViewItemCheckBoxSelectedDisabledBrush}"
                        contract13:CheckBoxBorderBrush="{ThemeResource GridViewItemCheckBoxBorderBrush}"
                        contract13:CheckBoxPointerOverBorderBrush="{ThemeResource GridViewItemCheckBoxPointerOverBorderBrush}"
                        contract13:CheckBoxPressedBorderBrush="{ThemeResource GridViewItemCheckBoxPressedBorderBrush}"
                        contract13:CheckBoxDisabledBorderBrush="{ThemeResource GridViewItemCheckBoxDisabledBorderBrush}"
                        contract13:SelectedDisabledBackground="{ThemeResource GridViewItemBackgroundSelectedDisabled}"
                        contract13:SelectedBorderBrush="{ThemeResource GridViewItemSelectedBorderBrush}"
                        contract13:SelectedPressedBorderBrush="{ThemeResource GridViewItemSelectedPressedBorderBrush}"
                        contract13:SelectedDisabledBorderBrush="{ThemeResource GridViewItemSelectedDisabledBorderBrush}"
                        contract13:SelectedInnerBorderBrush="{ThemeResource GridViewItemSelectedInnerBorderBrush}"/>
				</ControlTemplate>
                        <!--contract13:PointerOverBorderBrush="{ThemeResource GridViewItemPointerOverBorderBrush}"-->
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Stolen from https://github.com/microsoft/microsoft-ui-xaml/blob/main/dev/CommonStyles/ToggleSwitch_themeresources.xaml  -->
	<ControlTemplate x:Key="LeftContentToggleSwitch" TargetType="ToggleSwitch">
		<Grid
			Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			CornerRadius="{TemplateBinding CornerRadius}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<ContentPresenter
				x:Name="HeaderContentPresenter" Grid.Row="0"
				Margin="{ThemeResource ToggleSwitchTopHeaderMargin}"
				VerticalAlignment="Top" x:DeferLoadStrategy="Lazy" AutomationProperties.AccessibilityView="Raw"
				Content="{TemplateBinding Header}"
				ContentTemplate="{TemplateBinding HeaderTemplate}"
				Foreground="{ThemeResource ToggleSwitchHeaderForeground}"
				IsHitTestVisible="False" TextWrapping="Wrap" Visibility="Collapsed" />
			<Grid Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top">

				<Grid.RowDefinitions>
					<RowDefinition Height="{ThemeResource ToggleSwitchPreContentMargin}" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="{ThemeResource ToggleSwitchPostContentMargin}" />
				</Grid.RowDefinitions>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="12" MaxWidth="12" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Grid
					x:Name="SwitchAreaGrid" Grid.RowSpan="3" Grid.ColumnSpan="3"
					Margin="0,5"
					Background="{ThemeResource ToggleSwitchContainerBackground}"
					Control.IsTemplateFocusTarget="True"
					CornerRadius="{TemplateBinding CornerRadius}" />
				<ContentPresenter
					x:Name="OffContentPresenter" Grid.RowSpan="3"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					AutomationProperties.AccessibilityView="Raw"
					Content="{TemplateBinding OffContent}"
					ContentTemplate="{TemplateBinding OffContentTemplate}"
					Foreground="{TemplateBinding Foreground}"
					IsHitTestVisible="False" Opacity="0" />
				<ContentPresenter
					x:Name="OnContentPresenter" Grid.RowSpan="3"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					AutomationProperties.AccessibilityView="Raw"
					Content="{TemplateBinding OnContent}"
					ContentTemplate="{TemplateBinding OnContentTemplate}"
					Foreground="{TemplateBinding Foreground}"
					IsHitTestVisible="False" Opacity="0" />
				<Rectangle
					x:Name="OuterBorder" Grid.Row="1" Grid.Column="2"
					Width="40" Height="20"
					Fill="{ThemeResource ToggleSwitchFillOff}"
					RadiusX="10" RadiusY="10"
					Stroke="{ThemeResource ToggleSwitchStrokeOff}"
					StrokeThickness="{ThemeResource ToggleSwitchOuterBorderStrokeThickness}" />
				<Rectangle
					x:Name="SwitchKnobBounds" Grid.Row="1" Grid.Column="2"
					Width="40" Height="20"
					Fill="{ThemeResource ToggleSwitchFillOn}"
					Opacity="0" RadiusX="10" RadiusY="10"
					Stroke="{ThemeResource ToggleSwitchStrokeOn}"
					StrokeThickness="{ThemeResource ToggleSwitchOnStrokeThickness}" />
				<Grid
					x:Name="SwitchKnob" Grid.Row="1" Grid.Column="2"
					Width="20" Height="20" HorizontalAlignment="Left">
					<Border
						x:Name="SwitchKnobOn" Width="12" Height="12"
						Margin="0,0,1,0" HorizontalAlignment="Center"
						Background="{ThemeResource ToggleSwitchKnobFillOn}"
						BackgroundSizing="OuterBorderEdge"
						BorderBrush="{ThemeResource ToggleSwitchKnobStrokeOn}"
						CornerRadius="7" Opacity="0" RenderTransformOrigin="0.5, 0.5">
						<Border.RenderTransform>
							<CompositeTransform />
						</Border.RenderTransform>
					</Border>
					<Rectangle
						x:Name="SwitchKnobOff" Width="12" Height="12"
						Margin="-1,0,0,0" HorizontalAlignment="Center"
						Fill="{ThemeResource ToggleSwitchKnobFillOff}"
						RadiusX="7" RadiusY="7" RenderTransformOrigin="0.5, 0.5">
						<Rectangle.RenderTransform>
							<CompositeTransform />
						</Rectangle.RenderTransform>
					</Rectangle>
					<Grid.RenderTransform>
						<TranslateTransform x:Name="KnobTranslateTransform" />
					</Grid.RenderTransform>
				</Grid>
				<Thumb
					x:Name="SwitchThumb" Grid.RowSpan="3" Grid.ColumnSpan="3"
					AutomationProperties.AccessibilityView="Raw">
					<Thumb.Template>
						<ControlTemplate TargetType="Thumb">
							<Rectangle Fill="Transparent" />
						</ControlTemplate>
					</Thumb.Template>
				</Thumb>

			</Grid>

			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOff}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOff}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOff}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOn}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOn}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOn}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackground}" />
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Width">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="12" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Height">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="12" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Width">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="12" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Height">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="12" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="PointerOver">
						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
								<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchStrokeOffPointerOver}" />
							</ColorAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
								<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchFillOffPointerOver}" />
							</ColorAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPointerOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
								<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchContainerBackgroundPointerOver}" />
							</ColorAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Width">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Height">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Width">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Height">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">

						<VisualState.Setters>
							<Setter Target="SwitchKnobOn.HorizontalAlignment" Value="Right" />
							<Setter Target="SwitchKnobOn.Margin" Value="0,0,3,0" />
							<Setter Target="SwitchKnobOff.HorizontalAlignment" Value="Left" />
							<Setter Target="SwitchKnobOff.Margin" Value="3,0,0,0" />
						</VisualState.Setters>

						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
								<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchStrokeOffPressed}" />
							</ColorAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
								<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchFillOffPressed}" />
							</ColorAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
								<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchContainerBackgroundPressed}" />
							</ColorAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Width">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="17" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Height">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Width">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="17" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Height">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="14" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchHeaderForegroundDisabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Foreground">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Foreground">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
								<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchStrokeOffDisabled}" />
							</ColorAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
								<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchFillOffDisabled}" />
							</ColorAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnDisabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnDisabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffDisabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Background">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnDisabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
								<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="{ThemeResource ToggleSwitchContainerBackgroundDisabled}" />
							</ColorAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Width">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="12" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Height">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="12" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Width">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="12" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Height">
								<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" KeyTime="{StaticResource ControlNormalAnimationDuration}" Value="12" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>

				</VisualStateGroup>
				<VisualStateGroup x:Name="ToggleStates">

					<VisualStateGroup.Transitions>
						<VisualTransition
							x:Name="DraggingToOnTransition" GeneratedDuration="0" From="Dragging"
							To="On">

							<Storyboard>
								<RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOnOffset}" TargetName="SwitchKnob" />
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
						<VisualTransition
							x:Name="OnToDraggingTransition" GeneratedDuration="0" From="On"
							To="Dragging">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="0" Value="1" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="0" Value="1" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="0" Value="0" />
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
						<VisualTransition
							x:Name="DraggingToOffTransition" GeneratedDuration="0" From="Dragging"
							To="Off">

							<Storyboard>
								<RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOffOffset}" TargetName="SwitchKnob" />
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
						<VisualTransition
							x:Name="OnToOffTransition" GeneratedDuration="0" From="On"
							To="Off">

							<Storyboard>
								<RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOnToOffOffset}" TargetName="SwitchKnob" />
							</Storyboard>
						</VisualTransition>
						<VisualTransition
							x:Name="OffToOnTransition" GeneratedDuration="0" From="Off"
							To="On">

							<Storyboard>
								<RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOffToOnOffset}" TargetName="SwitchKnob" />
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
									<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Dragging" />
					<VisualState x:Name="Off" />
					<VisualState x:Name="On">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" To="20"
								Duration="0" />
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
								<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
								<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
								<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
								<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>

				</VisualStateGroup>
				<VisualStateGroup x:Name="ContentStates">
					<VisualState x:Name="OffContent">

						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Opacity" To="1"
								Duration="0" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<x:Boolean>True</x:Boolean>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="OnContent">

						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Opacity" To="1"
								Duration="0" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<x:Boolean>True</x:Boolean>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Grid>
	</ControlTemplate>

	<!--  https://github.com/microsoft/microsoft-ui-xaml/blob/main/dev/TabView/TabView_v1.xaml#L231  -->
	<Style x:Key="TabViewCloseButtonStyle" TargetType="Button">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="FocusVisualMargin" Value="-3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<ContentPresenter
						x:Name="ContentPresenter"
						Padding="{TemplateBinding Padding}"
						HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
						AutomationProperties.AccessibilityView="Raw"
						Background="{TemplateBinding Background}"
						BackgroundSizing="{TemplateBinding BackgroundSizing}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Content="{TemplateBinding Content}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						ContentTransitions="{TemplateBinding ContentTransitions}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</ContentPresenter>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  https://github.com/microsoft/microsoft-ui-xaml/blob/main/dev/TabView/TabView_v1.xaml#L378  -->
	<ControlTemplate x:Key="MicaTabViewItemTemplate" TargetType="controls:ModernTab">
		<Grid x:Name="LayoutRoot" Padding="{TemplateBinding Padding}">
			<!--  This item will cover the separator on its left side.  -->
			<Grid.ColumnDefinitions>
				<ColumnDefinition x:Name="LeftColumn" Width="0" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition x:Name="RightColumn" Width="0" />
			</Grid.ColumnDefinitions>

			<Grid.RenderTransform>
				<ScaleTransform x:Name="LayoutRootScale" />
			</Grid.RenderTransform>

			<Grid
				x:Name="TabContainer" Grid.Column="1"
				Padding="{ThemeResource TabViewItemHeaderPadding}"
				Background="{ThemeResource TabViewItemHeaderBackground}"
				BorderBrush="{ThemeResource ControlElevationBorderBrush}"
				BorderThickness="1" Control.IsTemplateFocusTarget="True"
				CornerRadius="{ThemeResource OverlayCornerRadius}"
				FocusVisualMargin="{TemplateBinding FocusVisualMargin}">
				<!--  {TemplateBinding BorderBrush}  -->

				<Grid.BackgroundTransition>
					<BrushTransition Duration="0:0:0.083" />
				</Grid.BackgroundTransition>

				<Grid.ColumnDefinitions>
					<ColumnDefinition x:Name="IconColumn" Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Viewbox
					x:Name="IconBox"
					MaxWidth="{ThemeResource TabViewItemHeaderIconSize}"
					MaxHeight="{ThemeResource TabViewItemHeaderIconSize}"
					Margin="{ThemeResource TabViewItemHeaderIconMargin}">
					<ContentControl
						x:Name="IconControl"
						Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabViewTemplateSettings.IconElement}"
						Foreground="{ThemeResource TabViewItemIconForeground}"
						HighContrastAdjustment="None" IsTabStop="False" />
				</Viewbox>

				<!--
					If we template bind the ContentPresenter's Content property to the TabViewItem.Header property
					we unfortunately run into the following issue if the header is [null] or empty:
					The TabViewItem.Content property will be implictly bound to the Content property of the ContentPresenter.
					To prevent this, we explicitly set a default empty content here and update the content in code behind.
				-->
				<ContentPresenter
					x:Name="ContentPresenter" Grid.Column="1"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					Content=""
					ContentTemplate="{TemplateBinding HeaderTemplate}"
					ContentTransitions="{TemplateBinding ContentTransitions}"
					FontSize="{ThemeResource TabViewItemHeaderFontSize}"
					FontWeight="{TemplateBinding FontWeight}"
					Foreground="{ThemeResource TabViewItemHeaderForeground}"
					HighContrastAdjustment="None" OpticalMarginAlignment="TrimSideBearings" />

				<Button
					x:Name="CloseButton" Grid.Column="2"
					Width="{ThemeResource TabViewItemHeaderCloseButtonSize}"
					Height="{ThemeResource TabViewItemHeaderCloseButtonSize}"
					Margin="{ThemeResource TabViewItemHeaderCloseMargin}"
					Background="{ThemeResource TabViewItemHeaderCloseButtonBackground}"
					Content="&#xE711;"
					FontSize="{ThemeResource TabViewItemHeaderCloseFontSize}"
					Foreground="{ThemeResource TabViewItemHeaderCloseButtonForeground}"
					HighContrastAdjustment="None" IsTabStop="False" IsTextScaleFactorEnabled="False"
					Style="{StaticResource TabViewCloseButtonStyle}" />
			</Grid>

			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />

					<VisualState x:Name="PointerOver">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlAltFillColorTertiary}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPointerOver}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonForeground}" />
						</VisualState.Setters>
					</VisualState>

					<VisualState x:Name="Pressed">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlAltFillColorQuarternary}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPressed}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonForeground}" />
						</VisualState.Setters>
					</VisualState>

					<VisualState x:Name="Selected">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlFillColorDefaultBrush}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
							<Setter Target="LayoutRoot.Background" Value="Transparent" />
						</VisualState.Setters>
					</VisualState>

					<VisualState x:Name="PointerOverSelected">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlFillColorSecondaryBrush}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPointerOver}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
							<Setter Target="LayoutRoot.Background" Value="Transparent" />
						</VisualState.Setters>
					</VisualState>

					<VisualState x:Name="PressedSelected">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlFillColorTertiaryBrush}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPressed}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
							<Setter Target="LayoutRoot.Background" Value="Transparent" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>

				<VisualStateGroup x:Name="DisabledStates">
					<VisualState x:Name="Enabled" />

					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundDisabled}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewButtonForegroundDisabled}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonForeground}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>

				<VisualStateGroup x:Name="DataVirtualizationStates">
					<VisualState x:Name="DataAvailable" />

					<VisualState x:Name="DataPlaceholder" />
				</VisualStateGroup>

				<VisualStateGroup x:Name="ReorderHintStates">
					<VisualState x:Name="NoReorderHint" />

					<VisualState x:Name="BottomReorderHint">
						<Storyboard>
							<DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="TopReorderHint">
						<Storyboard>
							<DragOverThemeAnimation Direction="Top" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="RightReorderHint">
						<Storyboard>
							<DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="LeftReorderHint">
						<Storyboard>
							<DragOverThemeAnimation Direction="Left" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint" />
					</VisualStateGroup.Transitions>
				</VisualStateGroup>

				<VisualStateGroup x:Name="DragStates">
					<VisualState x:Name="NotDragging" />

					<VisualState x:Name="Dragging">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity"
								To="{ThemeResource ListViewItemDragThemeOpacity}"
								Duration="0" />
							<DragItemThemeAnimation TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="DraggingTarget" />

					<VisualState x:Name="MultipleDraggingPrimary" />

					<VisualState x:Name="MultipleDraggingSecondary" />

					<VisualState x:Name="DraggedPlaceholder" />

					<VisualState x:Name="Reordering">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity"
								To="{ThemeResource ListViewItemReorderThemeOpacity}"
								Duration="0:0:0.240" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="ReorderingTarget">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity"
								To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"
								Duration="0:0:0.240" />
							<DoubleAnimation
								Storyboard.TargetName="LayoutRootScale" Storyboard.TargetProperty="ScaleX"
								To="{ThemeResource ListViewItemReorderTargetThemeScale}"
								Duration="0:0:0.240" />
							<DoubleAnimation
								Storyboard.TargetName="LayoutRootScale" Storyboard.TargetProperty="ScaleY"
								To="{ThemeResource ListViewItemReorderTargetThemeScale}"
								Duration="0:0:0.240" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="MultipleReorderingPrimary" />

					<VisualState x:Name="ReorderedPlaceholder">
						<Storyboard>
							<FadeOutThemeAnimation TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="DragOver">
						<Storyboard>
							<DropTargetItemThemeAnimation TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
					</VisualStateGroup.Transitions>
				</VisualStateGroup>

				<VisualStateGroup x:Name="IconStates">
					<VisualState x:Name="Icon" />
					<VisualState x:Name="NoIcon">
						<VisualState.Setters>
							<Setter Target="IconBox.Visibility" Value="Collapsed" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>

				<VisualStateGroup x:Name="TabWidthModes">
					<VisualState x:Name="StandardWidth" />

					<VisualState x:Name="Compact">
						<VisualState.Setters>
							<Setter Target="IconBox.Margin" Value="0,0,0,0" />
							<Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
							<Setter Target="IconColumn.Width" Value="{ThemeResource TabViewItemHeaderIconSize}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>

				<VisualStateGroup x:Name="CloseIconStates">
					<VisualState x:Name="CloseButtonVisible" />
					<VisualState x:Name="CloseButtonCollapsed">
						<VisualState.Setters>
							<Setter Target="CloseButton.Visibility" Value="Collapsed" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Grid>
	</ControlTemplate>

	<!--  https://github.com/microsoft/microsoft-ui-xaml/blob/main/dev/TabView/TabView_v1.xaml#L14  -->

	<ControlTemplate xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives" x:Key="MicaTabViewTemplate" TargetType="muxc:TabView">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<Grid x:Name="TabContainerGrid" XYFocusKeyboardNavigation="Enabled">

				<Grid.ColumnDefinitions>
					<ColumnDefinition x:Name="LeftContentColumn" Width="Auto" />
					<ColumnDefinition x:Name="TabColumn" Width="Auto" />
					<ColumnDefinition x:Name="AddButtonColumn" Width="Auto" />
					<ColumnDefinition x:Name="RightContentColumn" Width="*" />
				</Grid.ColumnDefinitions>

				<ContentPresenter
					x:Name="LeftContentPresenter" Margin="0,0,3,0"
					Content="{TemplateBinding TabStripHeader}"
					ContentTemplate="{TemplateBinding TabStripHeaderTemplate}" />

				<primitives:TabViewListView
					x:Name="TabListView" Grid.Column="1"
					Margin="{TemplateBinding Padding}"
					AllowDrop="{TemplateBinding AllowDropTabs}"
					CanDragItems="{TemplateBinding CanDragTabs}"
					CanReorderItems="{TemplateBinding CanReorderTabs}"
					ItemTemplate="{TemplateBinding TabItemTemplate}"
					ItemTemplateSelector="{TemplateBinding TabItemTemplateSelector}"
					ItemsSource="{TemplateBinding TabItemsSource}">
					<primitives:TabViewListView.Template>
						<ControlTemplate TargetType="primitives:TabViewListView">
							<Border
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}">
								<ScrollViewer
									x:Name="ScrollViewer" Grid.Column="1" AutomationProperties.AccessibilityView="Raw"
									BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
									HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
									IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
									IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
									IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
									IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
									IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
									Style="{StaticResource TabScrollViewerStyle}"
									TabNavigation="{TemplateBinding TabNavigation}"
									VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
									ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
									<ItemsPresenter x:Name="TabsItemsPresenter" Padding="{TemplateBinding Padding}" />
								</ScrollViewer>
							</Border>
						</ControlTemplate>
					</primitives:TabViewListView.Template>
				</primitives:TabViewListView>

				<Border
					Grid.Column="2" Width="1" Height="16"
					Margin="3,0,3,0" VerticalAlignment="Center"
					Background="{ThemeResource DividerStrokeColorDefaultBrush}" />

				<ContentPresenter
					x:Name="RightContentPresenter" Grid.Column="3" HorizontalAlignment="Stretch"
					Content="{TemplateBinding TabStripFooter}"
					ContentTemplate="{TemplateBinding TabStripFooterTemplate}" />

			</Grid>

			<ContentPresenter
				x:Name="TabContentPresenter" Grid.Row="1"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}" />
		</Grid>
	</ControlTemplate>

	<ControlTemplate xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives" x:Key="MicaTabViewVerticalTemplate" TargetType="muxc:TabView">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="250" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Grid x:Name="TabContainerGrid" XYFocusKeyboardNavigation="Enabled">

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<ContentPresenter x:Name="LeftContentPresenter" Content="{TemplateBinding TabStripHeader}" ContentTemplate="{TemplateBinding TabStripHeaderTemplate}" />

				<primitives:TabViewListView
					x:Name="TabListView" Grid.Row="1"
					Margin="{TemplateBinding Padding}"
					AllowDrop="{TemplateBinding AllowDropTabs}"
					CanDragItems="{TemplateBinding CanDragTabs}"
					CanReorderItems="{TemplateBinding CanReorderTabs}"
					ItemTemplate="{TemplateBinding TabItemTemplate}"
					ItemTemplateSelector="{TemplateBinding TabItemTemplateSelector}"
					ItemsSource="{TemplateBinding TabItemsSource}">
					<primitives:TabViewListView.Template>
						<ControlTemplate TargetType="primitives:TabViewListView">
							<Border
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}">
								<ScrollViewer
									x:Name="ScrollViewer" Grid.Column="1" AutomationProperties.AccessibilityView="Raw"
									BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
									HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
									IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
									IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
									IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
									IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
									IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
									Style="{StaticResource TabScrollViewerStyle}"
									TabNavigation="{TemplateBinding TabNavigation}"
									VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
									ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
									<ItemsPresenter x:Name="TabsItemsPresenter" Padding="{TemplateBinding Padding}" />
								</ScrollViewer>
							</Border>
						</ControlTemplate>
					</primitives:TabViewListView.Template>
					<primitives:TabViewListView.ItemsPanel>
						<ItemsPanelTemplate>
							<ItemsStackPanel Orientation="Vertical" />
						</ItemsPanelTemplate>
					</primitives:TabViewListView.ItemsPanel>
				</primitives:TabViewListView>

				<Border
					Grid.Row="2" Height="1" Margin="8,3"
					Background="{ThemeResource DividerStrokeColorDefaultBrush}" />

				<ContentPresenter
					x:Name="RightContentPresenter" Grid.Row="3"
					Content="{TemplateBinding TabStripFooter}"
					ContentTemplate="{TemplateBinding TabStripFooterTemplate}" />

			</Grid>

			<ContentPresenter
				x:Name="TabContentPresenter" Grid.Column="1"
				Background="{ThemeResource NavigationViewContentBackground}"
				BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}"
				BorderThickness="{ThemeResource NavigationViewContentGridBorderThickness}"
				CornerRadius="{ThemeResource NavigationViewContentGridCornerRadius}" />
		</Grid>
	</ControlTemplate>

	<Style x:Key="TabScrollViewerStyle" TargetType="ScrollViewer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Border
						x:Name="Root"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<Border
								x:Name="ScrollDecreaseButtonContainer"
								Padding="{ThemeResource TabViewItemLeftScrollButtonContainerPadding}"
								VerticalAlignment="Bottom"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
								<RepeatButton
									x:Name="ScrollDecreaseButton" AutomationProperties.AccessibilityView="Raw" Content="&#xEDD9;"
									Delay="50" HighContrastAdjustment="None" Interval="100"
									Style="{ThemeResource TabViewScrollButtonStyle}" />
							</Border>

							<ScrollContentPresenter
								x:Name="ScrollContentPresenter" Grid.Column="1" Padding="1,0,0,0"
								TabFocusNavigation="Once" />

							<Border
								x:Name="ScrollIncreaseButtonContainer" Grid.Column="2"
								Padding="{ThemeResource TabViewItemRightScrollButtonContainerPadding}"
								VerticalAlignment="Bottom"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
								<RepeatButton
									x:Name="ScrollIncreaseButton" AutomationProperties.AccessibilityView="Raw" Content="&#xEDDA;"
									Delay="50" HighContrastAdjustment="None" Interval="100"
									Style="{ThemeResource TabViewScrollButtonStyle}" />
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TabViewScrollButtonStyle" TargetType="RepeatButton">
		<Setter Property="Background" Value="{ThemeResource TabViewScrollButtonBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource TabViewScrollButtonForeground}" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="FontSize" Value="{ThemeResource TabViewItemScrollButonFontSize}" />
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
		<Setter Property="Width" Value="{ThemeResource TabViewItemScrollButtonWidth}" />
		<Setter Property="Height" Value="{ThemeResource TabViewItemScrollButtonHeight}" />
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
		<Setter Property="FocusVisualMargin" Value="-3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<ContentPresenter
						x:Name="ContentPresenter"
						HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
						AutomationProperties.AccessibilityView="Raw"
						Background="{TemplateBinding Background}"
						BackgroundSizing="{TemplateBinding BackgroundSizing}"
						Content="{TemplateBinding Content}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						ContentTransitions="{TemplateBinding ContentTransitions}"
						CornerRadius="{TemplateBinding CornerRadius}"
						FontFamily="{TemplateBinding FontFamily}"
						FontSize="{TemplateBinding FontSize}"
						FontWeight="{TemplateBinding FontWeight}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewScrollButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewScrollButtonForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewScrollButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewScrollButtonForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewScrollButtonBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewScrollButtonForegroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</ContentPresenter>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="WinUINavigationBackButtonNormalStyle" TargetType="Button">
		<Setter Property="Background" Value="{ThemeResource NavigationViewBackButtonBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Height" Value="{ThemeResource NavigationBackButtonHeight}" />
		<Setter Property="Width" Value="{ThemeResource NavigationBackButtonWidth}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="Content" Value="&#xE72B;" />
		<Setter Property="Margin" Value="4,2" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
						<muxc:AnimatedIcon
							x:Name="Content" Width="16" Height="16"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							muxc:AnimatedIcon.State="Normal" AutomationProperties.AccessibilityView="Raw" MirroredWhenRightToLeft="True">
							<animatedvisuals:AnimatedBackVisualSource />
							<muxc:AnimatedIcon.FallbackIconSource>
								<muxc:FontIconSource
									FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontFamily}"
									FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
									Glyph="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
									MirroredWhenRightToLeft="True" />
							</muxc:AnimatedIcon.FallbackIconSource>
						</muxc:AnimatedIcon>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<Setter Target="Content.(local:AnimatedIcon.State)" Value="PointerOver" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<Setter Target="Content.(local:AnimatedIcon.State)" Value="Pressed" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
